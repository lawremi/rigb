# -*- org -*-
* DONE Get FileTypeHandler from BundleContext
  CLOSED: [2011-09-27 Tue 12:18]
  - CLOSING NOTE [2011-09-27 Tue 12:18] \\
    Vide [[control][infra]].
  #+BEGIN_SRC java
    ServiceReference igbServiceReference = bundleContext.getServiceReference(FileTypeHandler.class.getName());
    
    if (igbServiceReference != null)
        {
            FileTypeHandler igbService = (FileTypeHandler) bundleContext.getService(igbServiceReference);
            registerServices(igbService);
        }
    
  #+END_SRC

  #+BEGIN_SRC java
    
    
    BundleContext bundleContext = OSGiHandler.getInstance().getBundleContext();
    
    ServiceReference[] fileTypeHandlerReferences =
        bundleContext.getServiceReferences(FileTypeHandler.class.getName(), null);
    
    for (ServiceReference fileTypeHandlerReference : fileTypeHandlerReferences) {
        FileTypeHandler fileTypeHandler = (FileTypeHandler)
            bundleContext.getService(fileTypeHandlerReference);
        System.out.println("@@@@@@@@@ " +
                           fileTypeHandler.getName() + ", " +
                           fileTypeHandler.getExtensions()[0] +
                           "(objectClass=" + rIGBHandler.class.getName() + ")");
    }
    
  #+END_SRC
* DONE Swing from R.
  CLOSED: [2011-09-27 Tue 12:17]
  - CLOSING NOTE [2011-09-27 Tue 12:17] \\
    Can't join a GUI thread from main, though.
  #+BEGIN_SRC java :tangle FrameDemo.java
    import java.lang.Thread;
    import java.awt.*;
    import java.awt.event.*;
    import javax.swing.*;
    
    /* FrameDemo.java requires no other files. */
    public class FrameDemo {
        /**
         * Create the GUI and show it.  For thread safety,
         * this method should be invoked from the
         * event-dispatching thread.
         */
        public static Thread thread;
    
        private static void createAndShowGUI() {
            //Create and set up the window.
            JFrame frame = new JFrame("FrameDemo");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    
            JLabel emptyLabel = new JLabel("");
            emptyLabel.setPreferredSize(new Dimension(175, 100));
            frame.getContentPane().add(emptyLabel, BorderLayout.CENTER);
    
            //Display the window.
            frame.pack();
            frame.setVisible(true);
        }
    
        public static void main(String[] args) {
            // Schedule a job for the event-dispatching thread:
            // creating and showing this application's GUI.
            FrameDemo.thread = new Thread(new Runnable() {
                    public void run() {
                        createAndShowGUI();
                    }
                });
            try {
                javax.swing.SwingUtilities.invokeAndWait(FrameDemo.thread);
            } catch (Throwable e) {
                e.printStackTrace();
            }
        }
    }
    
  #+END_SRC
* TODO Control IGB from R.
# <<control>>
  This works:

  #+BEGIN_SRC java :tangle igb-from-java.bsh :shebang #!/usr/bin/env bsh
    addClassPath("inst/lib/igb_exe.jar");
    addClassPath("inst/lib/genometry.jar");
    addClassPath("inst/lib/igb_service.jar");
    addClassPath("inst/lib/igb.jar");
    addClassPath("inst/lib/REngine.jar");
    addClassPath("dist/rIGB.jar");
    
    import java.net.URI;
    
    import com.affymetrix.main.Main;
    import com.affymetrix.main.OSGiHandler;
    import com.affymetrix.genometryImpl.parsers.FileTypeHandler;
    
    import com.gene.bcb.rigb.proxy.GRanges;
    import com.gene.bcb.rigb.rIGBManager;
    
    Main.main(new String[]{});
    
    handler = OSGiHandler.getInstance();
    handler.uninstallBundle("rIGB");
    handler.installBundle("file:///home/pcdanenb/prg/java/rigb/dist/rIGB.jar");
    
    context = handler.getBundleContext();
    reference = context.getServiceReference(rIGBManager.class.getName());
    manager = context.getService(reference);
    
    manager.idToGRanges.put("beispiel", new GRanges(null));
    manager.openURI("igb://beispiel.rigb");
    
  #+END_SRC

  But a naive translation into rJava doesn't:

  #+BEGIN_SRC R :tangle igb-from-R.R :shebang #!/usr/local/bin/R -f
    library(GenomicRanges)
    library(debug)
    library(rJava)
    .jinit(classpath=c('inst/lib/igb_exe.jar',
             'inst/lib/genometry.jar',
             'inst/lib/igb_service.jar',
             'inst/lib/REngine.jar',
             'inst/lib/JRI.jar',
             'inst/lib/JRIEngine.jar',
             'dist/rIGB.jar'))
    .jengine(TRUE)
    
    J("com.affymetrix.main.Main")$main(.jarray(c(), contents.class="[S"))
    
    handler <- J("com.affymetrix.main.OSGiHandler")$getInstance()
    handler$uninstallBundle('rIGB')
    handler$installBundle('file:///home/pcdanenb/prg/java/rigb/dist/rIGB.jar')
    
    context <- handler$getBundleContext()
    
    reference <-
      context$getServiceReference(J('com.gene.bcb.rigb.rIGBManager')$class$getName())
    
    manager <- context$getService(reference)
    
    granges <- new("GRanges",
                   seqnames = Rle(factor(c("chr1", "chr2", "chr1", "chr3")), c(1, 3, 2, 4)),
                   ranges = IRanges(1:10, width = 10:1, names = head(letters, 10)),
                   strand = Rle(strand(c("-", "+", "*", "+", "-")), c(1, 2, 2, 3, 2)),
                   seqinfo = Seqinfo(seqnames = paste("chr", 1:3, sep="")),
                   elementMetadata = DataFrame(score = 1:10, GC = seq(1, 0, length=10)))
    
    ## manager$putGRanges("beispiel", toJava(granges))
    ## manager$putGRanges(toJava(granges))
    ## manager$openURI("igb:///beispiel.rigb")
    manager$putGRanges()
    
  #+END_SRC

  #+BEGIN_SRC makefile :tangle rigb.mk :shebang #!/usr/bin/unexpand -t 4
    JAR=dist/rIGB.jar
    ifndef GENOVIZ
        GENOVIZ=/usr/local/src/genoviz
    endif
    
    .PHONY: all igb rigb
    
    all: igb rigb
    
    rigb:
        IGB_DIRECTORY=$(GENOVIZ) ant dist
    
    igb:
        ( cd $(GENOVIZ) && \
          ant cbc exe ) && \
        cp -v "$(GENOVIZ)/igb_exe.jar" \
              "$(GENOVIZ)/bundles/genometry.jar" \
              "$(GENOVIZ)/bundles/igb_service.jar" \
              "$(GENOVIZ)/bundles/igb.jar" \
              inst/lib
    
  #+END_SRC
* DONE URI-encoding
  CLOSED: [2011-09-19 Mon 21:18]
  From [[http://www.faqs.org/rfcs/rfc3986.html][RFC3986]]:

  #+BEGIN_QUOTE
  When authority is present, the path must either be empty or begin
  with a slash ("/") character.  When authority is not present, the
  path cannot begin with two slash characters ("//").
  #+END_QUOTE

  #+BEGIN_SRC java :tangle encode-uri.bsh :shebang #!/usr/bin/env bsh
    import java.net.URI;
    import java.io.File;
    
    addClassPath("inst/lib/commons-io-2.0.1.jar");
    import org.apache.commons.io.FilenameUtils;
    
    public static String idToUri(String id) {
        return new URI("igb", null, "///" + id + ".rigb", null).toString();
    }
    
    public static String uriToId(String uri) {
        return FilenameUtils.removeExtension(new File(new URI(uri).getPath()).getName());
    }
    
    id = "harro thar";
    uri = idToUri("harro thar");
    
    print(uri.equals("igb:///harro%20thar.rigb"));
    print(id.equals(uriToId(uri)));
    
  #+END_SRC
* Publication-vectors
  - Statistical graphics and computational statistics newsletter
    (rjavax stuff more interesting)
  - Bioconductor conference
  - Note in Bioinformatics (one or two page articles an Applications
    section: IGB)
  - JSS:
  - Plugins more technical; R and IGB talking: Bioinformatics.
  - R-Journal: Rjavax (peer-reviewed);
  - Nucleic acids research (app note)
  - Genome research (app note)
  - Interface conference might take over for the DSC.
  - RDynload
  - RIGB nice application
